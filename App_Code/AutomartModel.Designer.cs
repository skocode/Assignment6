//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AutomartModel", "FK__Registere__Perso__1DE57479", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutomartModel.Person), "RegisteredCustomer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutomartModel.RegisteredCustomer), true)]
[assembly: EdmRelationshipAttribute("AutomartModel", "FK__vehicle__PersonK__0F975522", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutomartModel.Person), "vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutomartModel.vehicle), true)]

#endregion

namespace AutomartModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AutomartEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AutomartEntities object using the connection string found in the 'AutomartEntities' section of the application configuration file.
        /// </summary>
        public AutomartEntities() : base("name=AutomartEntities", "AutomartEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutomartEntities object.
        /// </summary>
        public AutomartEntities(string connectionString) : base(connectionString, "AutomartEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutomartEntities object.
        /// </summary>
        public AutomartEntities(EntityConnection connection) : base(connection, "AutomartEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutoService> AutoServices
        {
            get
            {
                if ((_AutoServices == null))
                {
                    _AutoServices = base.CreateObjectSet<AutoService>("AutoServices");
                }
                return _AutoServices;
            }
        }
        private ObjectSet<AutoService> _AutoServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegisteredCustomer> RegisteredCustomers
        {
            get
            {
                if ((_RegisteredCustomers == null))
                {
                    _RegisteredCustomers = base.CreateObjectSet<RegisteredCustomer>("RegisteredCustomers");
                }
                return _RegisteredCustomers;
            }
        }
        private ObjectSet<RegisteredCustomer> _RegisteredCustomers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vehicle> vehicles
        {
            get
            {
                if ((_vehicles == null))
                {
                    _vehicles = base.CreateObjectSet<vehicle>("vehicles");
                }
                return _vehicles;
            }
        }
        private ObjectSet<vehicle> _vehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutoServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutoServices(AutoService autoService)
        {
            base.AddObject("AutoServices", autoService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegisteredCustomers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegisteredCustomers(RegisteredCustomer registeredCustomer)
        {
            base.AddObject("RegisteredCustomers", registeredCustomer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovehicles(vehicle vehicle)
        {
            base.AddObject("vehicles", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomartModel", Name="AutoService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutoService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutoService object.
        /// </summary>
        /// <param name="autoServiceID">Initial value of the AutoServiceID property.</param>
        /// <param name="serviceName">Initial value of the ServiceName property.</param>
        /// <param name="servicePrice">Initial value of the ServicePrice property.</param>
        public static AutoService CreateAutoService(global::System.Int32 autoServiceID, global::System.String serviceName, global::System.Decimal servicePrice)
        {
            AutoService autoService = new AutoService();
            autoService.AutoServiceID = autoServiceID;
            autoService.ServiceName = serviceName;
            autoService.ServicePrice = servicePrice;
            return autoService;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoServiceID
        {
            get
            {
                return _AutoServiceID;
            }
            set
            {
                if (_AutoServiceID != value)
                {
                    OnAutoServiceIDChanging(value);
                    ReportPropertyChanging("AutoServiceID");
                    _AutoServiceID = StructuralObject.SetValidValue(value, "AutoServiceID");
                    ReportPropertyChanged("AutoServiceID");
                    OnAutoServiceIDChanged();
                }
            }
        }
        private global::System.Int32 _AutoServiceID;
        partial void OnAutoServiceIDChanging(global::System.Int32 value);
        partial void OnAutoServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceName
        {
            get
            {
                return _ServiceName;
            }
            set
            {
                OnServiceNameChanging(value);
                ReportPropertyChanging("ServiceName");
                _ServiceName = StructuralObject.SetValidValue(value, false, "ServiceName");
                ReportPropertyChanged("ServiceName");
                OnServiceNameChanged();
            }
        }
        private global::System.String _ServiceName;
        partial void OnServiceNameChanging(global::System.String value);
        partial void OnServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ServicePrice
        {
            get
            {
                return _ServicePrice;
            }
            set
            {
                OnServicePriceChanging(value);
                ReportPropertyChanging("ServicePrice");
                _ServicePrice = StructuralObject.SetValidValue(value, "ServicePrice");
                ReportPropertyChanged("ServicePrice");
                OnServicePriceChanged();
            }
        }
        private global::System.Decimal _ServicePrice;
        partial void OnServicePriceChanging(global::System.Decimal value);
        partial void OnServicePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceDescription
        {
            get
            {
                return _ServiceDescription;
            }
            set
            {
                OnServiceDescriptionChanging(value);
                ReportPropertyChanging("ServiceDescription");
                _ServiceDescription = StructuralObject.SetValidValue(value, true, "ServiceDescription");
                ReportPropertyChanged("ServiceDescription");
                OnServiceDescriptionChanged();
            }
        }
        private global::System.String _ServiceDescription;
        partial void OnServiceDescriptionChanging(global::System.String value);
        partial void OnServiceDescriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomartModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="locationName">Initial value of the LocationName property.</param>
        /// <param name="locationAddress">Initial value of the LocationAddress property.</param>
        /// <param name="locationCity">Initial value of the LocationCity property.</param>
        /// <param name="locationState">Initial value of the LocationState property.</param>
        /// <param name="locationZip">Initial value of the LocationZip property.</param>
        /// <param name="locationPhone">Initial value of the LocationPhone property.</param>
        public static Location CreateLocation(global::System.Int32 locationID, global::System.String locationName, global::System.String locationAddress, global::System.String locationCity, global::System.String locationState, global::System.String locationZip, global::System.String locationPhone)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.LocationName = locationName;
            location.LocationAddress = locationAddress;
            location.LocationCity = locationCity;
            location.LocationState = locationState;
            location.LocationZip = locationZip;
            location.LocationPhone = locationPhone;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value, "LocationID");
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, false, "LocationName");
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationAddress
        {
            get
            {
                return _LocationAddress;
            }
            set
            {
                OnLocationAddressChanging(value);
                ReportPropertyChanging("LocationAddress");
                _LocationAddress = StructuralObject.SetValidValue(value, false, "LocationAddress");
                ReportPropertyChanged("LocationAddress");
                OnLocationAddressChanged();
            }
        }
        private global::System.String _LocationAddress;
        partial void OnLocationAddressChanging(global::System.String value);
        partial void OnLocationAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationCity
        {
            get
            {
                return _LocationCity;
            }
            set
            {
                OnLocationCityChanging(value);
                ReportPropertyChanging("LocationCity");
                _LocationCity = StructuralObject.SetValidValue(value, false, "LocationCity");
                ReportPropertyChanged("LocationCity");
                OnLocationCityChanged();
            }
        }
        private global::System.String _LocationCity;
        partial void OnLocationCityChanging(global::System.String value);
        partial void OnLocationCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationState
        {
            get
            {
                return _LocationState;
            }
            set
            {
                OnLocationStateChanging(value);
                ReportPropertyChanging("LocationState");
                _LocationState = StructuralObject.SetValidValue(value, false, "LocationState");
                ReportPropertyChanged("LocationState");
                OnLocationStateChanged();
            }
        }
        private global::System.String _LocationState;
        partial void OnLocationStateChanging(global::System.String value);
        partial void OnLocationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationZip
        {
            get
            {
                return _LocationZip;
            }
            set
            {
                OnLocationZipChanging(value);
                ReportPropertyChanging("LocationZip");
                _LocationZip = StructuralObject.SetValidValue(value, false, "LocationZip");
                ReportPropertyChanged("LocationZip");
                OnLocationZipChanged();
            }
        }
        private global::System.String _LocationZip;
        partial void OnLocationZipChanging(global::System.String value);
        partial void OnLocationZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationPhone
        {
            get
            {
                return _LocationPhone;
            }
            set
            {
                OnLocationPhoneChanging(value);
                ReportPropertyChanging("LocationPhone");
                _LocationPhone = StructuralObject.SetValidValue(value, false, "LocationPhone");
                ReportPropertyChanged("LocationPhone");
                OnLocationPhoneChanged();
            }
        }
        private global::System.String _LocationPhone;
        partial void OnLocationPhoneChanging(global::System.String value);
        partial void OnLocationPhoneChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomartModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personkey">Initial value of the Personkey property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Person CreatePerson(global::System.Int32 personkey, global::System.String lastName)
        {
            Person person = new Person();
            person.Personkey = personkey;
            person.LastName = lastName;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Personkey
        {
            get
            {
                return _Personkey;
            }
            set
            {
                if (_Personkey != value)
                {
                    OnPersonkeyChanging(value);
                    ReportPropertyChanging("Personkey");
                    _Personkey = StructuralObject.SetValidValue(value, "Personkey");
                    ReportPropertyChanged("Personkey");
                    OnPersonkeyChanged();
                }
            }
        }
        private global::System.Int32 _Personkey;
        partial void OnPersonkeyChanging(global::System.Int32 value);
        partial void OnPersonkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomartModel", "FK__Registere__Perso__1DE57479", "RegisteredCustomer")]
        public EntityCollection<RegisteredCustomer> RegisteredCustomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegisteredCustomer>("AutomartModel.FK__Registere__Perso__1DE57479", "RegisteredCustomer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegisteredCustomer>("AutomartModel.FK__Registere__Perso__1DE57479", "RegisteredCustomer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomartModel", "FK__vehicle__PersonK__0F975522", "vehicle")]
        public EntityCollection<vehicle> vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vehicle>("AutomartModel.FK__vehicle__PersonK__0F975522", "vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vehicle>("AutomartModel.FK__vehicle__PersonK__0F975522", "vehicle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomartModel", Name="RegisteredCustomer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegisteredCustomer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegisteredCustomer object.
        /// </summary>
        /// <param name="registeredCustomerID">Initial value of the RegisteredCustomerID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="customerPassword">Initial value of the CustomerPassword property.</param>
        public static RegisteredCustomer CreateRegisteredCustomer(global::System.Int32 registeredCustomerID, global::System.String email, global::System.String customerPassword)
        {
            RegisteredCustomer registeredCustomer = new RegisteredCustomer();
            registeredCustomer.RegisteredCustomerID = registeredCustomerID;
            registeredCustomer.Email = email;
            registeredCustomer.CustomerPassword = customerPassword;
            return registeredCustomer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegisteredCustomerID
        {
            get
            {
                return _RegisteredCustomerID;
            }
            set
            {
                if (_RegisteredCustomerID != value)
                {
                    OnRegisteredCustomerIDChanging(value);
                    ReportPropertyChanging("RegisteredCustomerID");
                    _RegisteredCustomerID = StructuralObject.SetValidValue(value, "RegisteredCustomerID");
                    ReportPropertyChanged("RegisteredCustomerID");
                    OnRegisteredCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _RegisteredCustomerID;
        partial void OnRegisteredCustomerIDChanging(global::System.Int32 value);
        partial void OnRegisteredCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerPassword
        {
            get
            {
                return _CustomerPassword;
            }
            set
            {
                OnCustomerPasswordChanging(value);
                ReportPropertyChanging("CustomerPassword");
                _CustomerPassword = StructuralObject.SetValidValue(value, false, "CustomerPassword");
                ReportPropertyChanged("CustomerPassword");
                OnCustomerPasswordChanged();
            }
        }
        private global::System.String _CustomerPassword;
        partial void OnCustomerPasswordChanging(global::System.String value);
        partial void OnCustomerPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonKey
        {
            get
            {
                return _PersonKey;
            }
            set
            {
                OnPersonKeyChanging(value);
                ReportPropertyChanging("PersonKey");
                _PersonKey = StructuralObject.SetValidValue(value, "PersonKey");
                ReportPropertyChanged("PersonKey");
                OnPersonKeyChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonKey;
        partial void OnPersonKeyChanging(Nullable<global::System.Int32> value);
        partial void OnPersonKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomartModel", "FK__Registere__Perso__1DE57479", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutomartModel.FK__Registere__Perso__1DE57479", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutomartModel.FK__Registere__Perso__1DE57479", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutomartModel.FK__Registere__Perso__1DE57479", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AutomartModel.FK__Registere__Perso__1DE57479", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomartModel", Name="vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vehicle object.
        /// </summary>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        /// <param name="licenseNumber">Initial value of the LicenseNumber property.</param>
        /// <param name="vehicleMake">Initial value of the VehicleMake property.</param>
        /// <param name="vehicleYear">Initial value of the VehicleYear property.</param>
        public static vehicle Createvehicle(global::System.Int32 vehicleId, global::System.String licenseNumber, global::System.String vehicleMake, global::System.String vehicleYear)
        {
            vehicle vehicle = new vehicle();
            vehicle.VehicleId = vehicleId;
            vehicle.LicenseNumber = licenseNumber;
            vehicle.VehicleMake = vehicleMake;
            vehicle.VehicleYear = vehicleYear;
            return vehicle;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                if (_VehicleId != value)
                {
                    OnVehicleIdChanging(value);
                    ReportPropertyChanging("VehicleId");
                    _VehicleId = StructuralObject.SetValidValue(value, "VehicleId");
                    ReportPropertyChanged("VehicleId");
                    OnVehicleIdChanged();
                }
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                OnLicenseNumberChanging(value);
                ReportPropertyChanging("LicenseNumber");
                _LicenseNumber = StructuralObject.SetValidValue(value, false, "LicenseNumber");
                ReportPropertyChanged("LicenseNumber");
                OnLicenseNumberChanged();
            }
        }
        private global::System.String _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.String value);
        partial void OnLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VehicleMake
        {
            get
            {
                return _VehicleMake;
            }
            set
            {
                OnVehicleMakeChanging(value);
                ReportPropertyChanging("VehicleMake");
                _VehicleMake = StructuralObject.SetValidValue(value, false, "VehicleMake");
                ReportPropertyChanged("VehicleMake");
                OnVehicleMakeChanged();
            }
        }
        private global::System.String _VehicleMake;
        partial void OnVehicleMakeChanging(global::System.String value);
        partial void OnVehicleMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VehicleYear
        {
            get
            {
                return _VehicleYear;
            }
            set
            {
                OnVehicleYearChanging(value);
                ReportPropertyChanging("VehicleYear");
                _VehicleYear = StructuralObject.SetValidValue(value, false, "VehicleYear");
                ReportPropertyChanged("VehicleYear");
                OnVehicleYearChanged();
            }
        }
        private global::System.String _VehicleYear;
        partial void OnVehicleYearChanging(global::System.String value);
        partial void OnVehicleYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonKey
        {
            get
            {
                return _PersonKey;
            }
            set
            {
                OnPersonKeyChanging(value);
                ReportPropertyChanging("PersonKey");
                _PersonKey = StructuralObject.SetValidValue(value, "PersonKey");
                ReportPropertyChanged("PersonKey");
                OnPersonKeyChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonKey;
        partial void OnPersonKeyChanging(Nullable<global::System.Int32> value);
        partial void OnPersonKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomartModel", "FK__vehicle__PersonK__0F975522", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutomartModel.FK__vehicle__PersonK__0F975522", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutomartModel.FK__vehicle__PersonK__0F975522", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutomartModel.FK__vehicle__PersonK__0F975522", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AutomartModel.FK__vehicle__PersonK__0F975522", "Person", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
